#!/usr/bin/env python
import requests
from threading import Thread
from queue import Queue

q = Queue()


def request(url):
	try:
		return requests.get(url)
		print(get_response)
	except requests.exceptions.ConnectionError:
		pass



def scan_subdomains(domain):
    global q
    while True:
        # get the subdomain from the queue
        subdomain = q.get()
        # scan the subdomain
        url = f"http://{subdomain}.{domain}"
        try:
            requests.get(url)
            
        except requests.ConnectionError:
            pass
        		
        else:
        	print("[+] Discovered subdomain:", url)

        # we're done with scanning that subdomain
        q.task_done()


def main(domain, n_threads, subdomains):
    global q

    # fill the queue with all the subdomains
    for subdomain in subdomains:
        q.put(subdomain)

    for t in range(n_threads):
        # start all threads
        worker = Thread(target=scan_subdomains, args=(domain,))
        # daemon thread means a thread that will end when the main thread ends
        worker.daemon = True
        worker.start()


if __name__ == "__main__":

	domain = input("Enter the domain name eg google.com :")
	wordlist = "lists/subdomain_wordlist.txt"
	num_threads = 50

	main(domain=domain, n_threads=num_threads, subdomains=open(wordlist).read().splitlines())
	q.join()